{"version":3,"sources":["bydidriksson/app/shoppingcart.cljs"],"mappings":";AAKA,AAAA,AAAMA,AAAaC;AAAnB,AACE,AAAMC,AAAS,AAAA,AAAAC,AAACC;AAAD,AAAS,AAACC,AAAE,AAAA,AAAKJ,AAAW,AAAA,AAAAE;AAAS,AAAA,AAAA,AAAAG,AAAQC;AAA5D,AACE,AAAA,AAACC,AAAMD,AAAYE,AAAYP;;AAEnC,AAAA,AAAMQ,AAAeT;AAArB,AACE,AAAMU,AAAK,AAAA,AAAOV;AAAlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGgB,AAAA,AAAK,AAAA,AAAA,AAAAK,AAAWM,AAA0B,AAAA,AAACC,AAAIF,AAES,AAAA,AAAQA,AACrC,AAAA,AAAOA,AACM,AAAA,AAAS,AAAA,AAAKA,AAG3B,AAAA,AAAQA;AAVnD,AAWwE,AAACX,AAAYC;AAXrF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAgBF,AAAA,AAAMa,AAAoBC;AAA1B,AAAA;;AAGA,AAAA,AAAMC,AAA0BC;AAAhC,AACE,AAACC,AAAOC,AAAE,AAACC,AAAIC,AAAc,AAAA,AAACD,AAAW,AAAA,AAACA,AAAUH;;AAEtD,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AASS,AAACF,AAAIV,AAAc,AAAA,AAAA,AAAAJ,AAAQC,AAMoC,AAAA,AAAU,AAACO,AAAmB,AAAA,AAAA,AAAAR,AAAQC,AAO5C,AAAA,AAAU,AAAG,AAACS,AAAyB,AAAA,AAAA,AAAAV,AAAQC,AAAc,AAACO,AAAmB,AAAA,AAAA,AAAAR,AAAQC;;AAK3J,AAAA,AAAMgB;AAAN,AACE,AAAMC,AAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAAZ,AACE;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAWkC,AAAA,AAAClB,AAAMgB,AAAKf,AAAY,AAAS,AAAAiB;AAXnE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAgBkC,AAAA,AAACnB,AAAMgB,AAAKf,AAAa,AAAS,AAAAkB;AAhBpE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAqBqC,AAAA,AAACpB,AAAMgB,AAAKf,AAAe,AAAS,AAAAmB;AArBzE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAwBmC,AACE,AAAA,AAACC;AAzBtC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AA+BJ,AAAA,AAAMC;AAAN,AACE,AAAMC,AAAW,AAAA,AAAA,AAAA,AAACN;AAAlB,AACE;AAAA,AAAA,AAAA,AACIH,AACD,AAAA,AAAA,AAAA,AAAM,AAAA,AAAAhB,AAAA,AAAIyB,AACPR","names":["bydidriksson.app.shoppingcart/remove-item","cart-item","new-cart","p1__28569#","cljs.core.remove","cljs.core._EQ_","cljs.core/deref","bydidriksson.app.state/state","cljs.core.swap_BANG_","cljs.core/assoc","bydidriksson.app.shoppingcart/shopping-item","item","bydidriksson.app.config/configuration","cljs.core.get","bydidriksson.app.shoppingcart/calculate-shipping","_cart","bydidriksson.app.shoppingcart/price-excluding-shipping","cart","cljs.core.reduce","cljs.core/+","cljs.core.map","js/parseFloat","bydidriksson.app.shoppingcart/item-summary","bydidriksson.app.shoppingcart/checkout-page","form","reagent.core.atom","p1__28570#","p1__28571#","p1__28572#","cljs.core.println","bydidriksson.app.shoppingcart/shopping-cart-page","page-state"],"sourcesContent":["(ns bydidriksson.app.shoppingcart\r\n  (:require [bydidriksson.app.config :as config]\r\n            [bydidriksson.app.state :as state]\r\n            [reagent.core :as reagent :refer [atom]]))\r\n\r\n(defn remove-item [cart-item]\r\n  (let [new-cart (remove #(= (:id cart-item) (:id %)) (:cart @state/state))]\r\n    (swap! state/state assoc :cart new-cart)))\r\n\r\n(defn shopping-item [cart-item]\r\n  (let [item (:item cart-item)]\r\n    [:div {:class \"flex justify-between items-center mt-6 pt-6 border-t\"}\r\n     [:div {:class \"flex items-center\"}\r\n      [:img {:src (str (:backend @config/configuration) \"/\" (get item :image)), :width \"60\", :class \"rounded-full \"}]\r\n      [:div {:class \"flex flex-col ml-3 \"}\r\n       [:span {:class \"text-xs title-font text-gray-500 tracking-widest\"} (:brand item)]\r\n       [:span {:class \"text-md font-medium\"} (:name item)]\r\n       [:span {:class \"text-xs font-light text-gray-400\"} (str \"#\" (:id item))]]]\r\n     [:div {:class \"flex justify-center items-center\"}\r\n      [:div {:class \"pr-8\"}\r\n       [:span {:class \"text-xs font-medium\"} (:price item)] \" kr\"]\r\n      [:button {:class \"w-10 px-2 py-0 text-black-100 rounded\" :on-click #(remove-item cart-item)} \"X\"]\r\n      [:div \" \"\r\n       [:i {:class \"fa fa-close text-xs font-medium\"}] \" \"]]]))\r\n\r\n\r\n(defn calculate-shipping [_cart]\r\n  30)\r\n\r\n(defn price-excluding-shipping [cart]\r\n  (reduce + (map js/parseFloat (map :price (map :item cart)))))\r\n\r\n(defn item-summary []\r\n  [:div {:class \"h-screen\"}\r\n   [:div {:class \"py-12\"}\r\n    [:div {:class \"max-w-md mx-auto shadow-lg rounded-lg md:max-w-5xl\"}\r\n     [:div {:class \"md:flex \"}\r\n      [:div {:class \"w-full p-4 px-5 py-5\"}\r\n       [:div {:class \"md:grid md:grid-cols-2 gap-1 \"}\r\n        [:div {:class \"col-span-2 p-5\"}\r\n         [:h1 {:class \"text-xl font-medium \"} \"Kundvagn\"]\r\n         (map shopping-item (:cart @state/state))\r\n         [:div {:class \"flex justify-between items-center mt-6 pt-6 border-t\"}\r\n          [:div {:class \"flex justify-center items-center\"}\r\n           [:span {:class \"text-sm font-medium text-gray-400 mr-1\"} \"Frakt:\"]\r\n           \" \"]\r\n          [:div {:class \"flex justify-center items-center\"}\r\n           [:span {:class \"pr-8 text-base font-semibold text-gray-800\"} (.toFixed (calculate-shipping (:cart @state/state)) 2) \" kr\"]\r\n           \" \"]]\r\n         [:div {:class \"flex justify-between items-center pt-6\"}\r\n          [:div {:class \"flex justify-center items-center\"}\r\n           [:span {:class \"text-sm font-medium font-bold text-gray-600 mr-1\"} \"Totalt:\"]\r\n           \" \"]\r\n          [:div {:class \"flex justify-center items-center\"}\r\n           [:span {:class \"pr-8 text-lg font-bold text-gray-800\"} (.toFixed (+ (price-excluding-shipping (:cart @state/state)) (calculate-shipping (:cart @state/state))) 2) \" kr\"]\r\n           \" \"]]\r\n         [:div {:class \"flex justify-between items-center mt-6 pt-6 border-t\"}\r\n          [:a {:href \"/checkout\" :class \"flex ml-auto text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded\"} \"L\u00e4gg din best\u00e4llning\"]]]]]]]]])\r\n\r\n(defn checkout-page []\r\n  (let [form (atom {:email \"\" :name \"\" :message \"\"})]\r\n    (fn [] [:section {:class \"text-gray-600 body-font relative\"}\r\n            [:div {:class \"container px-5 py-24 mx-auto\"}\r\n             [:div {:class \"flex flex-col text-center w-full mb-12\"}\r\n              [:h1 {:class \"sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900\"} \"Kontakta oss\"]\r\n              [:p {:class \"lg:w-1/3 mx-auto leading-relaxed text-base\"} \"Hittar du inte det du s\u00f6ker efter? Har du en fr\u00e5ga till oss? Eller vill du bara ber\u00e4tta n\u00e5got annat? Tveka inte! Fyll i formul\u00e4ret nedanf\u00f6r s\u00e5 \u00e5terkommer vi s\u00e5 fort vi kan.\"]]\r\n             [:div {:class \"lg:w-1/2 md:w-2/3 mx-auto\"}\r\n              [:div {:class \"flex flex-wrap -m-2\"}\r\n               [:div {:class \"p-2 w-1/2\"}\r\n                [:div {:class \"relative\"}\r\n                 [:label {:for \"name\", :class \"leading-7 text-sm text-gray-600\"} \"Namn\"]\r\n                 [:input {:type \"text\", :id \"name\", :name \"name\", :class \"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                          :on-change #(swap! form assoc :name (.-value (.-target %)))}]]]\r\n               [:div {:class \"p-2 w-1/2\"}\r\n                [:div {:class \"relative\"}\r\n                 [:label {:for \"email\", :class \"leading-7 text-sm text-gray-600\"} \"Epost\"]\r\n                 [:input {:type \"email\", :id \"email\", :name \"email\", :class \"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                          :on-change #(swap! form assoc :email (.-value (.-target %)))}]]]\r\n               [:div {:class \"p-2 w-full\"}\r\n                [:div {:class \"relative\"}\r\n                 [:label {:for \"message\", :class \"leading-7 text-sm text-gray-600\"} \"Meddelande\"]\r\n                 [:textarea {:id \"message\", :name \"message\", :class \"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out\"\r\n                             :on-change #(swap! form assoc :message (.-value (.-target %)))}]]]\r\n               [:div {:class \"p-2 w-full\"}\r\n                  [:button {:class \"flex mx-auto text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg\"\r\n                            :on-click #(do\r\n                                         (println \"Vidare\"))} \"Skicka\"]]\r\n               [:div {:class \"p-2 w-full pt-8 mt-8 border-t border-gray-200 text-center\"}\r\n                [:a {:class \"text-indigo-500\"} \"mattias.didriksson@gmail.com\"]\r\n                [:p {:class \"leading-normal my-5\"} \"G\u00e4vle\"\r\n                 [:br] \"Sverige\"]]]]]])))\r\n\r\n(defn shopping-cart-page []\r\n  (let [page-state (atom {:stage 1})]\r\n    (fn []\r\n      [[item-summary]\r\n       (when (> @page-state 1)\r\n         [checkout-page])]\r\n      )))\r\n\r\n\r\n\r\n"]}