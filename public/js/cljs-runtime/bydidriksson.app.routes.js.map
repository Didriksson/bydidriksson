{"version":3,"sources":["bydidriksson/app/routes.cljs"],"mappings":";AAWA,AAAA,AAAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAa,AAAA,AAACC;;AAGvoB2BC;AAE9B;;;AAAA,AAAMC;AAAN,AAGE,AAACC,AAAWT,AACA,AAAKU;AAAL,AACE,AAACC,AAAOb,AAAaY;AAFnC,AAAA,AAAA","names":["js/bydidriksson","js/bydidriksson.app","js/bydidriksson.app.routes","js/bydidriksson.app.routes.current-view","bydidriksson.app.routes/current-view","reagent.core.atom","bydidriksson.app.routes/routes","bydidriksson.app.shop/shop-page","bydidriksson.app.contact/contact-page","bydidriksson.app.about/about-page","bydidriksson.app.shoppingcart/shopping-cart-page","bydidriksson.app.item/item-page","reitit.frontend.router","cljs.core/int?","bydidriksson.app.routes/init-routes!","reitit.frontend.easy/start!","m","cljs.core/reset!"],"sourcesContent":["(ns bydidriksson.app.routes\r\n  (:require [bydidriksson.app.about :as about]\r\n            [bydidriksson.app.contact :as contact]\r\n            [bydidriksson.app.item :as item]\r\n            [bydidriksson.app.shop :as shop]\r\n            [bydidriksson.app.shoppingcart :as shoppingcart]\r\n            [reagent.core :as r]\r\n            [reitit.frontend :as rf]\r\n            [reitit.frontend.easy :as rfe]))\r\n\r\n\r\n(defonce current-view (r/atom nil))\r\n\r\n\r\n(def routes\r\n  (rf/router\r\n   [\"/\"\r\n    [\"\"\r\n     {:name ::home\r\n      :view #'shop/shop-page}]\r\n    [\"shop\"\r\n     {:name ::shop\r\n      :view #'shop/shop-page}]\r\n    [\"contact\"\r\n     {:name ::contact\r\n      :view #'contact/contact-page}]\r\n    [\"about\"\r\n     {:name ::about\r\n      :view #'about/about-page}]\r\n    [\"shopping-cart\"\r\n     {:name ::shoppingcart\r\n      :view #'shoppingcart/shopping-cart-page}]   \r\n    [\"items/:id\"\r\n     {:name ::item\r\n      :view #'item/item-page\r\n      :parameters {:path {:id int?}}}]]))   \r\n    \r\n(defn init-routes!\r\n  \"Start the routing\"\r\n  []\r\n  (rfe/start! routes\r\n              (fn [m]\r\n                (reset! current-view m))\r\n              {:use-fragment false}))\r\n"]}